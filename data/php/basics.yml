category: Basics
questions:
    -   question: |
            What will be the value of $bool and $bool2?
            ```
            $bool = filter_var("true", FILTER_VALIDATE_BOOLEAN);
            $bool2 = filter_var(2, FILTER_VALIDATE_BOOLEAN);
            ```
        answers:
            - {value: 'true and true', correct: false}
            - {value: 'false and true', correct: false}
            - {value: 'false and false', correct: false}
            - {value: 'true and false', correct: true}

    -   question: |
            Consider the following code snippet:
            ```
            class Bar
            {
                private $foo = 'private';
            }

            function getter()
            {
                return function() {
                    return $this->foo;
                };
            }

            ????
            ```
            Which statement does the ???? placeholder replace in order to make this code snippet output the string private?
        answers:
            - {value: 'echo getter()->bindTo(new Bar())();', correct: false}
            - {value: 'echo getter()->bindTo(new Bar(), new Bar())();', correct: false}
            - {value: 'This is not possible.', correct: false}
            - {value: "echo getter()->bindTo(new Bar(), 'Bar')();", correct: true}
            - {value: "echo getter()->bindTo('Bar', 'Bar')();", correct: false}
            - {value: 'echo getter()->bindTo(new Bar())();', correct: false}

    -   question: |
            Consider the following code snippet:
            ```
            try {
                try {
                  echo 'a-';
                  throw new exception();
                  echo 'b-';
                } catch (Exception $e) {
                    echo 'caught-';
                    throw $e;
                } finally {
                    echo 'finished-';
                }
            } catch (Exception $e) {
                echo 'end-';
            }
            ```
            What is the expected output when executing this script?
        answers:
            - {value: 'a-b-caught-finished-end-', correct: false}
            - {value: 'a-b-caught-end-', correct: false}
            - {value: 'a-caught-finished-end-', correct: true}
            - {value: 'a-caught-end-', correct: false }
            - {value: 'a-caught-end-finished-', correct: false }

    -   question: "Which of the following is not a predefined PHP variable?"
        answers:
            - {value: $_GLOBALS, correct: true }
            - {value: $php_errormsg, correct: false }
            - {value: $http_response_header, correct: false }
            - {value: $argc, correct: false }
            - {value: $_POST, correct: false }

    -   question: |
            As of which PHP version should the following code not throw an error?

            class A
            {
                const foo = [ /*...*/ ];
            }
        answers:
            - {value: 5.6, correct: true }
            - {value: 5.5, correct: false }
            - {value: 7.0, correct: false }
            - {value: 5.4, correct: false }

    -   question: "What SAPI does not exist in PHP ?"
        answers:
            - {value: apxs2, correct: false }
            - {value: fpm, correct: false }
            - {value: nginx, correct: true }
            - {value: cli, correct: false }
            - {value: cgi, correct: false }

    -   question: |
            Consider the following code snippet:

            $a = 20;

            function my_function($b)
            {
                $a = 30;
                global $a, $c;

                return $c = ($b + $a);
            }

            print my_function(40) + $c;

            What does this script output when it's executed with PHP?
        answers:
            - {value: "An error saying something like Undefined variable: ....", correct: false }
            - {value: 70, correct: false }
            - {value: 60, correct: false }
            - {value: 120, correct: true }
            - {value: 110, correct: false }

    -   question: "Can PHP open and work natively with Zip file?"
        answers:
            - {value: "Yes", correct: false }
            - {value: No, correct: true }

    -   question: "How would you access the file data sent to your PHP server using the PUT HTTP method ?"
        answers:
            - {value: Using $_PUT, correct: false }
            - {value: Using $HTTP_PUT_VARS, correct: false }
            - {value: It is not possible, correct: false }
            - {value: Using the php://input stream, correct: true }
            - {value: Using $_POST, correct: false }

    -   question: "What is the default timeout of a PHP session cookie ?"
        answers:
            - {value: Depends on the web server, correct: false }
            - {value: Until the browser is closed, correct: true }
            - {value: 20 minutes, correct: false }
            - {value: 10 minutes, correct: false }
        help: |
            https://www.php.net/manual/en/session.configuration.php#ini.session.cookie-lifetime

    -   question: |
            <?php
            $bool = true;
            $array = array();
            $a = 14;
            $a = $a + $bool - $array;
            echo $a;
        answers:
            - {value: 15, correct: false }
            - {value: An error, correct: true }
            - {value: 14, correct: false }

    -   question: |
            Consider the following code snippet:

            echo print('hello');

            What will be the output when running this script?
        answers:
            - {value: hellotrue, correct: false }
            - {value: hello5, correct: false }
            - {value: hello1, correct: true }
            - {value: hello0, correct: false }
            - {value: hello, correct: false }


    -   question: |
            What will output the following code ?

            $input = <<<'EOF'
            1;PHP;Likes dollar signs
            2;Python;Likes whitespace
            3;Ruby;Likes blocks
            EOF;

            function input_parser($input) {
                foreach (explode("\n", $input) as $line) {
                    $fields = explode(';', $line);
                    $id = array_shift($fields);

                    yield $id => $fields;
                }
            }

            foreach (input_parser($input) as $id => $fields) {
                echo "$id:\n";
                echo "    $fields[0]\n";
                echo "    $fields[1]\n";
            }
        answers:
            - value: |
                  1: PHP Likes dollar signs
                  2: Python Likes whitespace
                  3: Ruby Likes blocks
              correct: false
            - value: |
                  1;PHP;Likes dollar signs
                  2;Python;Likes whitespace
                  3;Ruby;Likes blocks
              correct: false
            - value: |
                  1:
                      PHP
                      Likes dollar signs
                  2:
                      Python
                      Likes whitespace
                  3:
                      Ruby
                      Likes blocks
              correct: true
            - value: |
                 An error
              correct: false

    -   question: "How can you get the value of the current configuration directives (php.ini) of a PHP extension?"
        answers:
            - {value: With php://config stream, correct: false }
            - {value: With ini_get_all(), correct: true }
            - {value: With the $GLOBALS array, correct: false }
            - {value: With the reflection API, correct: true }
            - {value: With get_loaded_extensions(), correct: false }

    -   question: "How do you retrieve a cookie in PHP?"
        answers:
            - {value: "get_cookie('mycookie')", correct: false }
            - {value: "cookies::get('mycookie')", correct: false }
            - {value: "$_COOKIE['mycookie']", correct: true }
            - {value: "$_SERVER['cookies']['mycookie']", correct: false }

    -   question: |
            What will be the output of the following code?

            $a = (object) ["a" => "b"];
            $b = (object) ["a" => "c"];
            echo $a <=> $b;
        answers:
            - {value: "0", correct: false }
            - {value: "-1", correct: false }
            - {value: "1", correct: true }

    -   question: Which is a valid way to set a header on a response in PHP?
        answers:
            - {value: "header('Content-Type: text/html');", correct: true }
            - {value: "set_header('Content-Type: text/html');", correct: false }
            - {value: "set_header('Content-Type', 'text/html');", correct: true }

    -   question: |
            Will the following PHP work?
            <html>
            <?php
            namespace MyProject;
            ?>
        answers:
            - {value: No, correct: true }
            - {value: Yes, correct: false }

    -   question: |
            Will the following PHP work?
            <html>
            <?php
            namespace MyProject;
            ?>
        answers:
            - {value: No, correct: true }
            - {value: Yes, correct: false }

    -   question: Can PHP support multiple namespaces within a single file?
        answers:
            - {value: No, correct: false }
            - {value: Yes, correct: true }

    -   question: Can PHP support multiple namespaces within a single file?
        answers:
            - {value: No, correct: false }
            - {value: Yes, correct: true }

    -   question: |
            Will the following code trigger an error?

            <?php
            namespace a;

            echo "I belong to namespace a";

            namespace b {
                echo "I'm from namespace b";
            }
        answers:
            - {value: No, correct: false }
            - {value: Yes, correct: true }

    -   question: |
            From the script below, how would you display the error messages thrown by the 'ls' command ?

            $null = fopen('/dev/null', 'r+');
            $descriptorspec = [  0 => $null,  1 => $null,  2 => array["pipe", "w"] ];

            $process = proc_open("ls /foo", $descriptorspec, $pipes);
            echo __________________
        answers:
            - {value: 'proc_errors($process);', correct: false }
            - {value: 'fgets($pipes[2]);', correct: true }
            - {value: 'stream_errors($pipes);', correct: false }
            - {value: 'fread($null, 128);', correct: false }

#    -   question: You want to fully overload all PDO features with OOP. What do you need to accomplish that?
#        answers:
#            - {value: 'PDO::setStatementClass()', correct: false }
#            - {value: 'Use the PDO parameter', correct: false }
#            - {value: 'PDO::ATTR_STATEMENT_CLASS', correct: true }
#            - {value: 'Extend the PDO class', correct: true }
#            - {value: 'PDO::ATTR_USE_CLASS', correct: false }
#            - {value: 'Extend the PDOStatement class', correct: true }

    -   question: |
            $subs = [
                'at' => '@',
                'com' => 'net'
            ];

            $email = 'comnet@example.com';

            echo strtr($email, $subs);
        answers:
            - {value: 'netnet@example.net', correct: true }
            - {value: 'comnet@example.com', correct: false }
            - {value: 'comnetatexample.net', correct: false }
            - {value: 'netnet@example.com', correct: false }

    -   question: Which version of PHP introduced abstract classes?
        answers:
            - {value: '5.0', correct: true }
            - {value: '5.6', correct: false }
            - {value: '4.0', correct: false }
            - {value: '7.0', correct: false }

    -   question: |
            Is the following interface valid?

            interface Mine {
                protected function test ();
            }
        answers:
            - {value: No, correct: true }
            - {value: Yes, correct: false }

    -   question: |
            Is the following interface valid?

            interface Mine {
                public function test ();
            }
        answers:
            - {value: Yes, correct: true }
            - {value: No, correct: false }


    -   question: |
            Is the following code valid?

            interface Mine {
                public const TEST = '123';
            }

            class Two implements Mine {
                public const TEST = '321';
            }
        answers:
            - {value: No, correct: true }
            - {value: Yes, correct: false }

    -   question: |
            Is the following code valid?

            class Mine {
                public const TEST = '123';
            }

            class Two extends Mine {
                public const TEST = '321';
            }
        answers:
            - {value: Yes, correct: true }
            - {value: No, correct: false }

    -   question: |
            Is the following code valid?

            $object = new class {};
            $string = 'class';
            var_dump($object instanceof $string);
        answers:
            - {value: Yes, correct: true }
            - {value: No, correct: false }

    -   question: |
            Is the following code valid?

            $object = new class {};
            $stdClass = new stdClass;
            var_dump($object instanceof $stdClass);
        answers:
            - {value: Yes, correct: true }
            - {value: No, correct: false }

    -   question: |
            What is the output of the following script?

            $object = new stdClass;
            const STRING = 'stdClass';
            var_dump($object instanceof STRING);
        answers:
            - {value: bool(false), correct: true }
            - {value: bool(true), correct: false }

    -   question: |
            Consider the following code snippet:

            function redirect($url)
            {
                $header = sprintf('Location: %s', $url);
                /* Make sure the Location header hasn't already been sent yet */
                if ( ??? ) {
                    header($header);
                    exit;
                }
            }

            redirect('https://google.com');

            Which statement does the ??? placeholder replace in order to make this code work properly?
        answers:
            - {value: "!in_array($header, headers_list())", correct: true }
            - {value: "!headers_sent()", correct: true }
            - {value: "!http_redirect_to($url)", correct: false }
            - {value: "$_SERVER['HTTP_LOCATION'] != $url", correct: false }

    -   question: |
            Which function would best parse the following string by the tab (\t) and newline (\n) characters ?

            $string = "John\tMark\nTed\tLarry";
        answers:
            - {value: 'strtok($string, "\t\n");', correct: true }
            - {value: 'strstr($string, "\t\n");', correct: false }
            - {value: 'explode($string, "\t\n");', correct: false }
            - {value: 'str_split($string, "\t\n");', correct: false }

    -   question: Is content automatically escaped in PHP templates?
        answers:
            - {value: "No", correct: true }
            - {value: "Yes", correct: false }

    -   question: |
            function dot($n)
            {
                if ($n > 0) {
                    dot(--$n);
                    echo '.';
                } else {
                    return $n;
                }
            }
            dot(4);
        answers:
            - {value: "An error.", correct: false }
            - {value: ".....", correct: false }
            - {value: "...", correct: false }
            - {value: "....", correct: true }
            - {value: "...0", correct: false }

    -   question: |
            What is the output ?

            <?php
            $a = 4 << 2 + 1;
            echo $a;
            ?>
        answers:
            - {value: 32, correct: true }
            - {value: 17, correct: false }
            - {value: 1, correct: false }
            - {value: 16, correct: false }
            - {value: 9, correct: false }

    -   question: |
            How many HTTP requests (without using JavaScript) are required to determine whether or not a client supports cookies?
        answers:
            - {value: '"2"', correct: true }
            - {value: This is not possible without javascript., correct: false }
            - {value: '"0"', correct: false }
            - {value: '"1"', correct: false }

    -   question: |
            Which of the following is not a magic method?
        answers:
            - {value: __serialize(), correct: true }
            - {value: __wakeup(), correct: false }
            - {value: __invoke(), correct: false }
            - {value: __get(), correct: false }
            - {value: __set_state(), correct: false }

    -   question: |
            What is the output ?

            <?php
            $a = 10;
            echo strlen($a) . count($a);
            do {
               echo $a . "elephpant ";
               $a++;
            } while($a <= 1);
        answers:
            - {value: 12, correct: false }
            - {value: 2110elephpant, correct: true }
            - {value: 21, correct: false }
            - {value: 1210elephpant, correct: false }
            - {value: 10elephpant, correct: false }

    -   question: |
            Consider the following code snippet:

            function foo(&$a = 8)
            {
                $b = &$a;
                $b -= $a + 3;

                return $b;
            }

            $a = foo(4);
            echo $a;

            What will be the outcome of executing this script?
        answers:
            - {value: A PHP fatal error., correct: true }
            - {value: -3, correct: false }
            - {value: 3, correct: false }
            - {value: 8, correct: false }
            - {value: -4, correct: false }

    -   question: |
            What will be the output of the following script ?

            $str = printf('%.1f', 1/8);
            echo 'Total is ';
            echo $str;
        answers:
            - {value: 0.1Total is 3, correct: true }
            - {value: 0.125Total is 0.125, correct: false }
            - {value: 3Total is 3, correct: false }
            - {value: 0.125Total is 0.1, correct: false }
            - {value: 1/8Total is 1/8, correct: false }

    -   question: From which global arrays is it possible to read submitted form data?
        answers:
            - {value: $_COOKIE, correct: false }
            - {value: $_SESSION, correct: false }
            - {value: $_GET, correct: true }
            - {value: $_ENV, correct: false }
            - {value: $_REQUEST, correct: true }
            - {value: $_POST, correct: true }

    -   question: |
            What line of code should be substituted with /** line **/ to achieve an output of a?

            <?php

            $fruitAndVeg = [
                'c' => 'Carrot',
                'p' => 'Tomato',
                'b' => 'Banana',
                't' => 'Potato',
                'a' => 'Apple'
            ];

            /** line **/

            $keys = array_keys($fruitAndVeg);

            echo $keys[0];
        answers:
            - {value: ksort($fruitAndVeg);, correct: true }
            - {value: usort($fruitAndVeg);, correct: false }
            - {value: krsort($fruitAndVeg);, correct: false }
            - {value: sort($fruitAndVeg);, correct: false }

    -   question: |
            What will be the output of the following code?

            class Foo {
                public $value = 42;
                public function &getValue() {
                    return $this->value;
                }
            }
            $foo = new Foo;
            $myValue = &$foo->getValue();
            $foo->value = 2;

            echo $myValue;
        answers:
            - {value: "'5'", correct: false }
            - {value: null, correct: false }
            - {value: "'2'", correct: true }
            - {value: 42, correct: false }

    -   question: |
            What should ????? be replaced with to add a <title> node with the value of "Hello, World!"?

            $title = $dom->createElement('title');

            $node = ?????????

            $title->appendChild($node);
            $head->appendChild($title);
        answers:
            - {value: '$dom->appendTextNode($title, "Hello, World!");', correct: false }
            - {value: "$dom->createTextNode('Hello, World!');", correct: true }
            - {value: None of the above, correct: true }
            - {value: "$dom->appendElement($title, 'text', 'Hello, World!');", correct: false }
            - {value: "$dom->createElement('text', 'Hello, World!');", correct: false }


    -   question: |
            $stmt = $conn->prepare('SELECT * FROM articles WHERE id IN (?)');
            $stmt->bindValue(1, [1, 2, 3, 4, 5, 6], \Doctrine\DBAL\Connection::PARAM_INT_ARRAY);
            $stmt->execute();
        answers:
            - {value: No, correct: true }
            - {value: Yes, correct: false }

    -   question: Which of the following assertions is correct?
        answers:
            - {value: PHP is a loosely-typed imperative language., correct: true }
            - {value: PHP is a strongly-typed imperative language., correct: false }
            - {value: PHP is a strongly-typed, functionnal language., correct: false }
            - {value: PHP is a loosely-typed functionnal language., correct: false }
            - {value: PHP is a loosely-typed declarative language., correct: false }

    -   question: |
            What will be the value $bool ?

            $bool = (bool) "false"
        answers:
            - {value: true, correct: true }
            - {value: false, correct: false }
            - {value: "Error : you cannot cast a String as a Boolean", correct: false }

    -   question: |
            What is the output of the following controller?


            use Symfony\Bundle\FrameworkBundle\Controller\Controller;

            class HelloController extends Controller
            {
                public function helloAction()
                {
                    $filename = tempnam(sys_get_temp_dir(), 'sf');
                    file_put_contents($filename, 'hello {{ 1 + 1 }}');

                    return $this->forward('FrameworkBundle:Template:template', [
                        'template' => $filename
                    ]);
                }
            }
        answers:
            - {value: "Error: The controller must return a response", correct: false }
            - {value: "Error: Controller requires that you provide a value for the “$variables” argument.", correct: false }
            - {value: "hello 2", correct: true }
            - {value: "hello", correct: false }
            - {value: "Error: Route `FrameworkBundle:Template:template` does not exist.", correct: false }


    -   question: |
            What is the value of $value?

            <?php

            function inner() {
                yield 1;
                yield 2;
                yield 3;
            }
            function gen() {
                yield 0;
                yield from inner();
                yield 4;
            }

            $value = iterator_to_array(gen());
        answers:
            - {value: "[0 => 1, 1 => 4, 2 => 3]", correct: true }
            - {value: "[0 => 1, 1 => 1, 2 => 2, 3 => 3, 4 => 4]", correct: false }
            - {value: "The script won't execute", correct: false }
            - {value: "[0 => 0, 1 => [0 => 1, 1 => 2, 2 => 3], 2 => 4]", correct: false }

    -   question: |
            What is the value of $value?

            <?php

            function inner() {
                yield 1;
                yield 2;
                yield 3;
            }
            function gen() {
                yield 0;
                yield from inner();
                yield 4;
            }

            $value = iterator_to_array(gen(), false);
        answers:
            - {value: "[0 => 1, 1 => 1, 2 => 2, 3 => 3, 4 => 4]", correct: true }
            - {value: "[0 => 1, 1 => 4, 2 => 3]", correct: false }
            - {value: "The script won't execute", correct: false }
            - {value: "[0 => 0, 1 => [0 => 1, 1 => 2, 2 => 3], 2 => 4]", correct: false }


    -   question: |
            What is the output of the following script?

            <?php

            echo '10', 10;
        answers:
            - {value: "1010", correct: true }
            - {value: "An error", correct: false }
            - {value: "10", correct: false }

    -   question: |
            What is the output of the following script?

            <?php

            $val = 1;

            switch ($val) {
                case 1:
                    echo 'Hello';
                case 2:
                    echo 'World';
            }
        answers:
            - {value: "HelloWorld", correct: true }
            - {value: "Hello", correct: false }
            - {value: "An error", correct: false }


    -   question: |
            What will be the output of the following script?

            <?php

            $a = ['foo', 'bar' => 'baz', ['foobar', 'baz']];

            echo count($a, true);
        answers:
            - {value: "4", correct: false }
            - {value: "5", correct: true }
            - {value: "An error", correct: false }
            - {value: "2", correct: false }
            - {value: "3", correct: false }

    -   question: |
            What will be the output of the following script?

            $name = 'Jean Luc';
            $age  = 9;

            printf("My name is %2$.4s and I'm %1$02d", $age, $name);
        answers:
            - {value: "My name is Jean and I'm 09", correct: true }
            - {value: "My name is Jean Luc and I'm 9", correct: false }
            - {value: "My name is 9 and I'm Jean Luc", correct: false }
            - {value: "My name is $Jean Luc and I'm $9", correct: false }
            - {value: "My name is Jean 9 and I'm Luc", correct: false }

    -   question: |
            What will be the output of the following script?

            $name = 'Jean Luc';
            $age  = 9;

            printf("My name is %2$.1s and I'm %1$04d", $age, $name);
        answers:
            - {value: "My name is J and I'm 0009", correct: true }
            - {value: "My name is Jean Luc and I'm 9", correct: false }
            - {value: "My name is 9 and I'm Jean Luc", correct: false }
            - {value: "My name is $Jean Luc and I'm $9", correct: false }
            - {value: "My name is Jean 9 and I'm Luc", correct: false }
