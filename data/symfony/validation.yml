category: Validation
questions:
    -   question: |
            Is the following code correct ?

            namespace Acme\User;

            use Symfony\Component\Security\Core\User\UserInterface;
            use Symfony\Component\Validator\Constraints as Assert;

            /**
             * @Assert\GroupSequence({"Default", "User"})
             */
            class User implements UserInterface
            {
                /**
                * @Assert\NotBlank
                */
                private $username;

                /**
                * @Assert\NotBlank
                */
                private $password;

                /**
                 * @Assert\True(message="The password cannot match your username", groups={"Strict"})
                 */
                public function isPasswordLegal()
                {
                    return ($this->username !== $this->password);
                }

                // ...
            }
        answers:
            - {value: Yes, correct: false}
            - {value: No, correct: true}

    -   question: |
            Assuming that the validate() method detects no violations, what will the Response object contain?

            // Controller/BookController.php
            public function indexAction(
            {
                $book = new Book();
                $validator = $this->get('validator');
                $errors = $validator->validate($book);
                return new Response((string) $errors);
            }
        answers:
            - {value: "Notice: Array to string conversion.", correct: false}
            - {value: An empty string, correct: true}
            - {value: False, correct: falseh}
            - {value: "Fatal error: Object of class ConstraintViolationList could not be converted to string.", correct: false}

    -   question: "What does the CardScheme Constraint stand for ?"
        answers:
            - {value: It validates a credit card number, correct: false}
            - {value: It validates if a credit card is a VISA one, correct: true}
            - {value: It validates that a card number is valid for a given credit card company, correct: falseh}
            - {value: It doesn't exist, correct: false}
