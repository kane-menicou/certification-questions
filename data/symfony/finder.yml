category: Finder
questions:
    -   question: "What is the default value of the directory mode argument of the Symfony\\Component\\Filesystem\\Filesystem::mkdir method ?"
        answers:
            - { value: 0777, correct: true }
            - { value: 0700, correct: false }
            - { value: 0755, correct: false }

    -   question: "Which exception is thrown when a directory creation has failed ?"
        answers:
            - { value: InvalidFileException, correct: false }
            - { value: DirectoryException, correct: false }
            - { value: FileSystemException, correct: false }
            - { value: FileException, correct: false }
            - { value: IOException, correct: true }

    -   question: "Which value a closure must return in order to exclude .txt files with Symfony\\Component\\Finder\\Finder::filter method?"
        answers:
            - { value: 'true', correct: false }
            - { value: 'null', correct: false }
            - { value: 1, correct: false }
            - { value: 'false', correct: true }

    -   question: "What is the Symfony\\Component\\Filesystem\\Filesystem method to dump contents to a file?"
        answers:
            - { value: "$fs->dumpFile('file.txt', 'Hello World');", correct: true }
            - { value: "$fs->file('file.txt', 'Hello World');", correct: false }
            - { value: "$fs->dump('file.txt', 'Hello World');", correct: false }
            - { value: "$fs->dumpToFile('file.txt', 'Hello World');", correct: false }

    -   question: "Which of the following are Filesystem methods?"
        answers:
            - { value: "move", correct: false }
            - { value: "exists", correct: true }
            - { value: "symlink", correct: true }
            - { value: "makePathRelative", correct: true }
            - { value: "remove", correct: true }
            - { value: "isAbsolutePath", correct: true }

    -   question: |
            Which exception is thrown when the origin file does not exist when you use the Symfony\Component\Filesystem\Filesystem::copy method ?
        answers:
            - { value: "FileException", correct: false }
            - { value: "FileNotExistException", correct: false }
            - { value: "FileErrorException", correct: false }
            - { value: "FilesystemException", correct: false }
            - { value: "FileNotFoundException", correct: true }

    -   question: |
            What is returned by the Symfony\Component\Filesystem\Filesystem::mkdir method if the directory has been successfully created ?
        answers:
            - { value: "Nothing", correct: true }
            - { value: "The FileSystem object", correct: false }
            - { value: "A string with the directory path", correct: false }
            - { value: "true or false", correct: false }

    -   question: |
            Which methods belong to Symfony\Component\Finder\Finder class ?
        answers:
            - { value: "path", correct: true }
            - { value: "name", correct: true }
            - { value: "size", correct: true }
            - { value: "notPath", correct: true }
            - { value: "notName", correct: true }
            - { value: "owner", correct: false }
            - { value: "type", correct: false }
            - { value: "notSize", correct: false }

    -   question: With the Finder, which method is correct to exclude a logs directory from matching ?
        answers:
            - { value: "$finder->in(__DIR__)->excludeDir('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreDir('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->notMatch('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreDirectory('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreFiles('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignore('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->exclude('logs');", correct: true }

    -   question: What is the Symfony\Component\Filesystem\Filesystem method to check if the given path is absolute ?
        answers:
            - { value: "$fs->checkAbsolutePath('/tmp');", correct: false }
            - { value: "$fs->isAbsolute('/tmp');", correct: false }
            - { value: "$fs->absolutePath('/tmp');", correct: false }
            - { value: "$fs->isAbsolutePath('/tmp');", correct: true }


    -   question: Which exception is thrown with the Symfony\Component\Finder\Finder::in method if one of the directories does not exist ?
        answers:
            - { value: "InvalidArgumentException", correct: true }
            - { value: "FileException", correct: false }
            - { value: "FileNotFoundException", correct: false }
            - { value: "invalidException", correct: false }
            - { value: "InvalidOptionException", correct: false }

    -   question: What is the result of calling getRealPath() on a file?
        answers:
            - { value: "The absolute path", correct: true }
            - { value: "The relative path to the file, omitting the filename", correct: false }
            - { value: "The relative path to the file", correct: false }

    -   question: What is the result of calling getRelativePath() on a file?
        answers:
            - { value: "The absolute path", correct: false }
            - { value: "The relative path to the file, omitting the filename", correct: true }
            - { value: "The relative path to the file", correct: false }

    -   question: What is the result of calling getRelativePathname() on a file?
        answers:
            - { value: "The absolute path", correct: false }
            - { value: "The relative path to the file, omitting the filename", correct: false }
            - { value: "The relative path to the file", correct: true }

    -   question: What is the result of calling getRelativePathname() on a file?
        answers:
            - { value: "The absolute path", correct: false }
            - { value: "The relative path to the file, omitting the filename", correct: false }
            - { value: "The relative path to the file", correct: true }

    -   question: Which criteria is mandatory for the finder?
        answers:
            - { value: "Location", correct: true }
            - { value: "Name", correct: false }
            - { value: "Size", correct: true }

    -   question: Which of the follow are valid usages of ->in()?
        answers:
            - { value: "$finder->in(__DIR__)->in('/elsewhere');", correct: true }
            - { value: "$finder->in([__DIR__, '/elsewhere']);", correct: true }
            - { value: "$finder->in(__DIR__, '/elsewhere');", correct: false }

    -   question: |
            Is the following usage of the finder correct:

            $finder->in('ftp://example.com/');
        answers:
            - { value: "Yes", correct: true }
            - { value: "No", correct: true }
            - { value: "$finder->in(__DIR__, '/elsewhere');", correct: false }
            - { value: "$finder->in(__DIR__, '/elsewhere');", correct: false }

    -   question: What is the purpose of the ignoreVCS() method?
        answers:
            - { value: "When enabled it ensures the finder does not include VCS metadata files", correct: true }
            - { value: "When enabled it ensures that new files are not included in the VCS", correct: false }
            - { value: "When enabled it ensures that VCS ignored files are not included", correct: false }

    -   question: What is the purpose of the ignoreVCSIgnored() method?
        answers:
            - { value: "When enabled it ensures the finder does not include VCS metadata files", correct: false }
            - { value: "When enabled it ensures that new files are not included in the VCS", correct: false }
            - { value: "When enabled it ensures that VCS ignored files are not included", correct: true }

    -   question: |
            What would be the order of the following files after a call to sortByName() with no arguments?

            file2.txt, file1.txt, file3.txt
        answers:
            - { value: "file1.txt, file2.txt, file10.txt", correct: false }
            - { value: "file1.txt, file10.txt, file2.txt", correct: true }
            - { value: "file10.txt, file2.txt, file1.txt", correct: false }
        help: |
            https://symfony.com/doc/current/components/finder.html#sorting-results
            https://www.php.net/manual/en/function.strcmp.php

            By default, the sortByName() method uses the strcmp PHP function

    -   question: |
            What would be the order of the following files after a call to sortByName() with true as its first argument?

            file2.txt, file1.txt, file3.txt
        answers:
            - { value: "file1.txt, file2.txt, file10.txt", correct: true }
            - { value: "file1.txt, file10.txt, file2.txt", correct: false }
            - { value: "file10.txt, file2.txt, file1.txt", correct: false }

    -   question: |
            Which of the following are valid sorting methods on the finder?
        answers:
            - { value: "sortByName", correct: true }
            - { value: "sortByType", correct: true }
            - { value: "sortByAccessedTime", correct: true }
            - { value: "sortByChangedTime", correct: true }
            - { value: "sortByModifiedTime", correct: true }
            - { value: "sortByLastOpen", correct: false }
            - { value: "sortByDirectories", correct: false }
            - { value: "sortByAlphabeticalOrder", correct: false }
            - { value: "sortByLastTouch", correct: false }

    -   question: |
            Which is the correct method to reverse the order of the finder?
        answers:
            - { value: "reverseSorting", correct: true }
            - { value: "reverseOrder", correct: false }
            - { value: "flipOrder", correct: false }
            - { value: "flipSorting", correct: false }
            - { value: "oppositeSorting", correct: false }
            - { value: "oppositeSorting", correct: false }

    -   question: |
            Which is the correct method to reverse the order of the finder?
        answers:
            - { value: "reverseSorting", correct: true }
            - { value: "reverseOrder", correct: false }
            - { value: "flipOrder", correct: false }
            - { value: "flipSorting", correct: false }
            - { value: "oppositeSorting", correct: false }
            - { value: "oppositeSorting", correct: false }
