category: Finder
questions:
    -   question: "What is the default value of the directory mode argument of the Symfony\\Component\\Filesystem\\Filesystem::mkdir method ?"
        answers:
            - { value: 0777, correct: true }
            - { value: 0700, correct: false }
            - { value: 0755, correct: false }

    -   question: "Which exception is thrown when a directory creation has failed ?"
        answers:
            - { value: InvalidFileException, correct: false }
            - { value: DirectoryException, correct: false }
            - { value: FileSystemException, correct: false }
            - { value: FileException, correct: false }
            - { value: IOException, correct: true }

    -   question: "Which value a closure must return in order to exclude .txt files with Symfony\\Component\\Finder\\Finder::filter method?"
        answers:
            - { value: 'true', correct: false }
            - { value: 'null', correct: false }
            - { value: 1, correct: false }
            - { value: 'false', correct: true }

    -   question: "What is the Symfony\\Component\\Filesystem\\Filesystem method to dump contents to a file?"
        answers:
            - { value: "$fs->dumpFile('file.txt', 'Hello World');", correct: true }
            - { value: "$fs->file('file.txt', 'Hello World');", correct: false }
            - { value: "$fs->dump('file.txt', 'Hello World');", correct: false }
            - { value: "$fs->dumpToFile('file.txt', 'Hello World');", correct: false }

    -   question: "Which of the following are Filesystem methods?"
        answers:
            - { value: "move", correct: false }
            - { value: "exists", correct: true }
            - { value: "symlink", correct: true }
            - { value: "makePathRelative", correct: true }
            - { value: "remove", correct: true }
            - { value: "isAbsolutePath", correct: true }

    -   question: |
            Which exception is thrown when the origin file does not exist when you use the Symfony\Component\Filesystem\Filesystem::copy method ?
        answers:
            - { value: "FileException", correct: false }
            - { value: "FileNotExistException", correct: false }
            - { value: "FileErrorException", correct: false }
            - { value: "FilesystemException", correct: false }
            - { value: "FileNotFoundException", correct: true }

    -   question: |
            What is returned by the Symfony\Component\Filesystem\Filesystem::mkdir method if the directory has been successfully created ?
        answers:
            - { value: "Nothing", correct: true }
            - { value: "The FileSystem object", correct: false }
            - { value: "A string with the directory path", correct: false }
            - { value: "true or false", correct: false }

    -   question: |
            Which methods belong to Symfony\Component\Finder\Finder class ?
        answers:
            - { value: "path", correct: true }
            - { value: "name", correct: true }
            - { value: "size", correct: true }
            - { value: "notPath", correct: true }
            - { value: "notName", correct: true }
            - { value: "owner", correct: false }
            - { value: "type", correct: false }
            - { value: "notSize", correct: false }

    -   question: With the Finder, which method is correct to exclude a logs directory from matching ?
        answers:
            - { value: "$finder->in(__DIR__)->excludeDir('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreDir('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->notMatch('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreDirectory('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignoreFiles('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->ignore('logs');", correct: false }
            - { value: "$finder->in(__DIR__)->exclude('logs');", correct: true }

    -   question: What is the Symfony\Component\Filesystem\Filesystem method to check if the given path is absolute ?
        answers:
            - { value: "$fs->checkAbsolutePath('/tmp');", correct: false }
            - { value: "$fs->isAbsolute('/tmp');", correct: false }
            - { value: "$fs->absolutePath('/tmp');", correct: false }
            - { value: "$fs->isAbsolutePath('/tmp');", correct: true }
