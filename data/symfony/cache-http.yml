category: HTTP Cache
questions:
    -   question: 'Which Cache-Control directive disallows the browser and all intermediate caches from storing any version of the returned response?'
        answers:
            - { value: no-store, correct: true }
            - { value: private, correct: false }
            - { value: public, correct: false }
            - { value: no-cache, correct: false }

    -   question: 'Which of theses are the way to add the Cache-Control: public,s-maxage=900 HTTP response header on a Symfony\Component\HttpFoundation\Response object?'
        answers:
            - { value: $response->setShareMaxAge(900);, correct: false}
            - { value: $response->setSharedMaxAge(900);, correct: true}
            - { value: $response->setSMaxAge(900);, correct: false}
            - { value: $response->setMaxAge(900, true);, correct: false}

    -   question: 'What are browser caches especially useful for?'
        answers:
            - { value: Back/forward navigation, correct: true }
            - { value: Sharing files with other clients, correct: false }

    -   question: 'Are browser caches dedicated to a single user?'
        answers:
            - { value: Yes, correct: true }
            - { value: No, correct: false }

    -   question: |
            Which are the valid ways of caching a Response based not only on the URI but also the value of the
            Accept-Encoding and User-Agent request headers?
        answers:
            - { value: This is default behaviour, correct: false }
            - value: |
                  $response->headers->set('Vary', 'Accept-Encoding');
                  $response->headers->set('Vary', 'User-Agent');
              correct: false
            -   value: |
                    $response->headers->set('Vary', ['Accept-Encoding', 'User-Agent']);
                correct: true
            -   value: |
                    $response->setVary('Accept-Encoding, User-Agent');
                correct: true
            -   value: |
                    $response->setVary('Accept-Encoding');
                    $response->setVary('User-Agent', false);
                correct: true
            -   value: |
                    $response->headers->set('Vary', 'Accept-Encoding');
                    $response->headers->set('Vary', 'User-Agent', false);
                correct: true
            -   value: |
                    $response->headers->set('Vary', 'Accept-Encoding, User-Agent');
                correct: true
            -   value: This is not possible without calling a reverse proxy
                correct: false
            -   value: |
                    $response->setVary('Accept-Encoding');
                    $response->setVary('User-Agent');
                correct: false
