category: Process
questions:
    -   question: |
            What is the method to access the pid of the running process of the following code:

            use Symfony\Component\Process\Process;

            $process = new Process('/usr/bin/php worker.php');
            $process->start();
        answers:
            - {value: "$pid = $process->getPid();", correct: true}
            - {value: "$pid = $process->getProcessId();", correct: false}
            - {value: '$pid = $process->getData()->getProcessId();', correct: false}
            - {value: '$pid = $process->getData()->getPid();', correct: false}

    -   question: What is returned by the run() method of Symfony\Component\Process\Process?
        answers:
            - {value: "The exit status code", correct: true}
            - {value: "Nothing", correct: false}
            - {value: '(1)', correct: false}
            - {value: 'true or false', correct: false}

    -   question: While running a process asynchronously, which method would you use to check if the process is done?
        answers:
            - {value: "isAsync()", correct: false}
            - {value: "isStarted()", correct: false}
            - {value: 'isProcessing()', correct: false}
            - {value: 'isRunning()', correct: true}

    -   question: What is returned by the wait() method of Symfony\Component\Process\Process ?
        answers:
            - {value: "A Process object", correct: false}
            - {value: "Nothing", correct: false}
            - {value: 'The exitcode of the process', correct: true}
            - {value: 'true or false', correct: false}

    -   question: What are the availables process status constants in the Symfony\Component\Process\Process class ?
        answers:
            - {value: "STATUS_STOPPED", correct: false}
            - {value: "STATUS_FAILED", correct: false}
            - {value: 'STATUS_READY', correct: true}
            - {value: 'STATUS_INITIALIZED', correct: false}
            - {value: 'STATUS_SENT', correct: false}
            - {value: 'STATUS_TERMINATED', correct: true}
            - {value: 'STATUS_STARTED', correct: true}

    -   question: Which types of argument accepts the Symfony\Component\Process\InputStream\write() method?
        answers:
            - {value: "Boolean", correct: false}
            - {value: "Arrays", correct: false}
            - {value: 'Stream resources', correct: true}
            - {value: 'Scalars', correct: true}
            - {value: 'Traversable objects', correct: true}

    -   question: Which method is used to disable fetching output and error output from the underlying process ?
        answers:
            - {value: "The Symfony\\Component\\Process::fetchOutput method", correct: false}
            - {value: "The Symfony\\Component\\Process::setOutput method", correct: false}
            - {value: 'The Symfony\\Component\\Process::disableOutput method', correct: true}
            - {value: 'The Symfony\\Component\\Process::output method', correct: false}

    -   question: What is returned by the run() method of Symfony\Component\Process\Process?
        answers:
            - {value: "Nothing", correct: false}
            - {value: "The exit status code", correct: true}
            - {value: '1', correct: false}
            - {value: 'true or false', correct: false}

    -   question: Which of the following are valid methods on a process object?
        answers:
            - {value: "getOutput()", correct: true}
            - {value: "getErrorOutput()", correct: true}
            - {value: 'getIncrementalOutput()', correct: true}
            - {value: 'getIncrementalErrorOutput()', correct: true}
            - {value: 'fetchOutput()', correct: false}
            - {value: 'fetchErrorOutput()', correct: false}
            - {value: 'fetchIncrementalOutput()', correct: false}
            - {value: 'fetchIncrementalErrorOutput()', correct: false}

    -   question: What is the purpose of the mustRun() method on a process object?
        answers:
            - {value: "It throws an exception if the process cannot start", correct: false}
            - {value: "It throws an exception if the process exits with a non-zero exit code", correct: true}
            - {value: 'It is just an alias for the run method', correct: false}

    -   question: Will the send call to fetchIncrementalOutput() contain the output of the first?
        answers:
            - {value: "Yes", correct: false}
            - {value: "No", correct: true}

    -   question: Which is the correct method to fetch the last time that the process outputted?
        answers:
            - {value: "This is not possible", correct: false}
            - {value: "getLastOutputTime()", correct: true}
            - {value: "getOutputTime()", correct: false}
            - {value: "getLastResponseTime()", correct: false}

    -   question: Which of the following is the recommened way to invoke a command with muliple arguments?
        answers:
            - {value: "new Process(['/path/command', '--opxtion', 'argument', 'etc.']);", correct: true}
            - {value: "new Process(['/path/command --option argument etc.']);", correct: false}
            - {value: "new Process('/path/command --option argument etc.');", correct: false}
            - {value: "new Process('/path/command', '--option', 'argument', 'etc.');", correct: false}

    -   question: Which of the following is the recommened way to invoke a command with muliple arguments?
        answers:
            - {value: "new Process(['/path/command', '--option', 'argument', 'etc.']);", correct: true}
            - {value: "new Process(['/path/command --option argument etc.']);", correct: false}
            - {value: "new Process('/path/command --option argument etc.');", correct: false}
            - {value: "new Process('/path/command', '--option', 'argument', 'etc.');", correct: false}

    -   question: What is the difference between start() and run()?
        answers:
            - {value: "start is asynchronous", correct: true}
            - {value: "run is asynchronous", correct: false}
            - {value: "They're exactly the same, one is just an alias", correct: false}

    -   question: What is the difference between start() and run()?
        answers:
            - {value: "start is asynchronous", correct: true}
            - {value: "run is asynchronous", correct: false}
            - {value: "They're exactly the same, one is just an alias", correct: false}

    -   question: What is the difference between wait() and waitUntil()?
        answers:
            - {value: "waitUntil() takes a callback which when returns true, will allow the script to continue", correct: true}
            - {value: "wait() takes a callback which when returns true, will allow the script to continue", correct: false}
            - {value: "waitUntil() waits until the process has finished executing", correct: false}
            - {value: "wait() waits until the process has finished executing", correct: true}

    -   question: |
            What is the result of the following script?

            $process = new Process('php -r "echo \"hello\";"');
            $process->setInput('echo " world";');
            $process->run();

            echo $process->getOutput();
        answers:
            - {value: "Hello", correct: true}
            - {value: "Hello world", correct: false}
            - {value: "An error", correct: false}

    -   question: What is the signature of the stop() method?
        answers:
            - {value: "stop($timeout = 10, $signal = null)", correct: true}
            - {value: "stop($signal = null, $timeout = 10)", correct: false}
            - {value: "stop($signal, $timeout)", correct: false}
            - {value: "stop($timeout, $signal)", correct: false}

    -   question: What is the default value of the kill signal for process component?
        answers:
            - {value: "SIGINT", correct: true}
            - {value: "'0'", correct: false}
            - {value: "'1'", correct: false}
            - {value: "KILLSIG", correct: false}

    -   question: What is the default value of the kill signal for the process component?
        answers:
            - {value: "SIGINT", correct: true}
            - {value: "'0'", correct: false}
            - {value: "'1'", correct: false}
            - {value: "'3'", correct: false}

    -   question: What is the class to use to execute PHP in an isolated process?
        answers:
            - {value: 'Symfony\Component\Process\PhpProcess', correct: true}
            - {value: 'Symfony\Component\Process\Php\PhpProcess', correct: false}
            - {value: 'Symfony\Component\PhpProcess\PhpProcess', correct: false}
            - {value: 'Symfony\Component\PhpProcess\Process', correct: false}

    -   question: What is the method to change the time to the process closing?
        answers:
            - {value: "setTimeout", correct: true}
            - {value: "setProcessTimeout", correct: false}
            - {value: "setTimeToLive", correct: false}
            - {value: "setProcessTimeToLive", correct: false}

    -   question: What is the exception thrown when the process timesout?
        answers:
            - {value: 'Symfony\Component\Process\Exception\ProcessTimedOutException', correct: true}
            - {value: 'Symfony\Component\Process\Exception\ProcessTimeOutException', correct: false}
            - {value: 'Symfony\Component\Process\Exception\RuntimeException', correct: false}
            - {value: '\Exception', correct: false}
            - {value: '\RuntimeException', correct: false}
            - {value: 'Symfony\Component\Process\Exception\ProcessFailedException', correct: false}

    -   question: What is the difference between the setTimeout() and setIdleTimeout() methods?
        answers:
            - {value: "setIdleTimeout() only considers the time since the last output", correct: true}
            - {value: "setTimeout() considers the time the whole command has ran for", correct: true}
            - {value: "setIdleTimeout() only considers the time since the last input ", correct: false}
            - {value: "setTimeout() considers the time the since the last output or input", correct: false}

    -   question: What is the method to send a signal to a process?
        answers:
            - {value: "signal()", correct: true}
            - {value: "setSignal()", correct: false}
            - {value: "sendSignal()", correct: false}
            - {value: "addSignal()", correct: false}

    -   question: |
            What is the result of the following script?

            $process = new Process('php -r "echo \"hello\";"');
            $process->run();
            $process->disableOutput();

            echo $process->getOutput();
        answers:
            - {value: "Nothing.", correct: false}
            - {value: "hello", correct: false}
            - {value: 'A Symfony\Component\Process\Exception\RuntimeException exception', correct: true}
            - {value: 'A Symfony\Component\Process\Exception\LogicException exception', correct: false}

    -   question: |
            What is the result of the following script?

            $process = new Process('php -r "echo \"hello\";"');
            $process->disableOutput();
            $process->run();

            echo $process->getOutput();
        answers:
            - {value: "Nothing.", correct: true}
            - {value: "hello", correct: false}
            - {value: 'A Symfony\Component\Process\Exception\LogicException exception', correct: false}
            - {value: 'A Symfony\Component\Process\Exception\RuntimeException exception', correct: false}

    -   question: What is the purpose of the Symfony\Component\Process\PhpExecutableFinder class?
        answers:
            - {value: "finds the absolute path of the available executable PHP binary", correct: true}
            - {value: "finds all executable PHP files on the server", correct: false}
            - {value: "finds all PHP files on the server", correct: false}

    -   question: What is the method to call to check where TTY are enabled on the current OS?
        answers:
            - {value: "Process::isTtySupported()", correct: true}
            - {value: "$process->isTtySupported()", correct: false}
            - {value: "Process::isTtyEnabled()", correct: false}
            - {value: "$process->isTtyEnabled()", correct: false}
