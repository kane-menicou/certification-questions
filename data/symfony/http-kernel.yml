category: HTTP kernel
questions:
    -   question: What are the methods available on the Symfony\Component\HttpKernel\Event\KernelEvent?
        answers:
            - { value: hasResponse, correct: false }
            - { value: getResponse, correct: false }
            - { value: getRequestType, correct: true }
            - { value: getKernel, correct: true }
            - { value: getRequest, correct: true }
            - { value: hasRequest, correct: false }
            - { value: hasException, correct: false }
            - { value: getException, correct: false }
            - { value: isMasterRequest, correct: true }
    -   question: What is the base class for events that are thrown in the HttpKernel component?
        answers:
            - { value: Symfony\Component\HttpKernel\Event\KernelEvent, correct: false }
            - { value: Symfony\Component\HttpKernel\HttpKernelEvent, correct: false }
            - { value: Symfony\Component\HttpKernel\KernelEvent, correct: true }
            - { value: Symfony\Component\HttpKernel\Event\HttpKernelEvent, correct: false }
            - { value: Symfony\Component\HttpKernel\Event\BaseKernelEvent, correct: false }
            - { value: Symfony\Component\HttpKernel\BaseKernelEvent, correct: false }

    -   question: How could you simulate a GET request to /hello-world?
        answers:
            - value: |
                  $request = Request::create(
                    null,
                    '/hello-world'
                    );
              correct: false
            - value: |
                  $request = Request::create(
                    '/hello-world'
                    );
              correct: true
            - value: |
                  $request = Request::create(
                    '/hello-world',
                    'GET'
                    );
              correct: true
            - value: |
                  $request = Request::create(
                    'GET',
                    '/hello-world'
                    );
              correct: false

    -   question: What is the argument passed to listeners of kernel.finish_request?
        answers:
            - { value: FinishRequestEvent, correct: true }
            - { value: PostResponseEvent, correct: false }
            - { value: ResponseEvent, correct: false }
            - { value: GetResponseEvent, correct: false }
            - { value: RequestEvent, correct: false }

    -   question: What is the default status code of a Symfony\Component\HttpFoundation\RedirectResponse object?
        answers:
            - { value: 302, correct: true }
            - { value: 304, correct: false }
            - { value: 300, correct: false }
            - { value: 301, correct: false }

    -   question: Which class is used to represent requests in Symfony?
        answers:
            - { value: Symfony\Component\HttpFoundation\Request, correct: true }
            - { value: Symfony\Component\HttpKernel\Request, correct: false }
            - { value: Symfony\Component\Request, correct: false }
            - { value: Symfony\Request, correct: false }

    -   question: What is output on $request->getPathInfo(); for a request to https://symfony.com/app.php/about?test=a?
        answers:
            - { value: /about, correct: true }
            - { value: /app.php/about?test=a, correct: false }
            - { value: https://symfony.com/app.php/about?test=a, correct: false }
            - { value: /about?test=a, correct: false }

    -   question: What is the correct way to retrieve the HTTP method from the request?
        answers:
            - { value: $request->getMethod();, correct: true }
            - { value: $request->method;, correct: false }
            - { value: $request->getHttpMethod();, correct: false }
            - { value: $request->server->get('method');, correct: false }

    -   question: What is the correct way to set the response code on the response?
        answers:
            - { value: $request->setStatusCode(Response::HTTP_OK);, correct: true }
            - { value: $request->setStatus(Response::HTTP_OK);, correct: false }
            - { value: $request->setCode(Response::HTTP_OK);, correct: false }
            - { value: $request->setHttpStatusCode(Response::HTTP_OK);, correct: false }

    -   question: What is the correct way to set a header on the response?
        answers:
            - { value: "$response->headers->set('Content-Type', 'text/html');", correct: true }
            - { value: "$response->setHeader('Content-Type', 'text/html');", correct: false }
            - { value: "$response->setHeader('Content-Type: text/html');", correct: false }

    -   question: What is the correct way to return a HTTP response using a response object?
        answers:
            - { value: $response->send();, correct: true }
            - { value: The object has no way of doing this, correct: false }
            - { value: $response->print();, correct: false }

    -   question: Which of the following is the route to preview the 400 exception page in Symfony?
        answers:
            - { value: 'http://localhost/_error/400.html', correct: true }
            - { value: 'http://localhost/error400.html', correct: false }
            - { value: 'http://localhost/400_error.html', correct: false }
