category: Forms
questions:
    -   question: |
            Which types are allowed for the choice_attr option of the
            Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType form type ?"
        answers:
            - { value: array, correct: true }
            - { value: callable, correct: true }
            - { value: string, correct: true }
            - { value: integer, correct: false }
            - { value: boolean, correct: false }
    -   question: "How to customize the validation error message of the validation error caused by a TransformationFailedException ?"
        answers:
            - {value: "It's not possible", correct: false}
            - {value: 'The exception message will be used as the validation error message', correct: false}
            - {value: 'By using the invalid_message option', correct: true}
    -   question: 'Are Data Transformers applied on a form field which has the inherit_data option set ?'
        answers:
            - {value: 'Yes', correct: false}
            - {value: 'No', correct: true}

    -   question: "If you need to modify the data given during pre-population or modify a form depending on the pre-populated data (adding or removing fields dynamically), to which event your code should be hooked?"
        answers:
            - {value: "FormEvents::POST_SET_DATA", correct: false}
            - {value: 'FormEvents::SUBMIT', correct: false}
            - {value: 'FormEvents::PRE_SET_DATA', correct: true}
            - {value: 'FormEvents::PRE_SUBMIT', correct: false}
            - {value: 'FormEvents::POST_SUBMIT', correct: false}

    -   question: "Which of theses are not options available in every FormType?"
        answers:
            - {value: "is_required", correct: true}
            - {value: "compound", correct: false}
            - {value: 'by_reference', correct: false}
            - {value: 'action', correct: false}
            - {value: 'trim', correct: false}
            - {value: 'attributes', correct: true}

    -
        question: "Which of the following are built-in Symfony form events?"
        answers:
            - {value: "FormEvents::PRE_SET_DATA", correct: true}
            - {value: "FormEvents::POST_SET_DATA", correct: true}
            - {value: 'FormEvents::SUBMIT_DATA', correct: false}
            - {value: 'FormEvents::PRE_SUBMIT', correct: true}
            - {value: 'FormEvents::SUBMIT', correct: true}
            - {value: 'FormEvents::POST', correct: false}
            - {value: 'FormEvents::POST_SUBMIT', correct: true}
            - {value: 'FormEvents::POST_DATA', correct: false}

    -   question: "Which of the following snipets is valid to set the maximum and minimum value for a Symfony\\Component\\Form\\Extension\\Core\\Type\\RangeType form type ?"
        answers:
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'min' => 5,
                        'max' => 50
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'attr' => [
                            'minimum' => 5,
                            'maximum' => 50
                        ]
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'attr' => [
                            'min' => 5,
                            'max' => 50
                        ]
                    ]);
                correct: true
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'minimum' => 5,
                        'maximum' => 50
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'min' => 5,
                        'max' => 50
                    ]);
                correct: false

    -   question: "How to get the value of title set in a form?"
        answers:
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'min' => 5,
                        'max' => 50
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'attr' => [
                            'minimum' => 5,
                            'maximum' => 50
                        ]
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'attr' => [
                            'min' => 5,
                            'max' => 50
                        ]
                    ]);
                correct: true
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'minimum' => 5,
                        'maximum' => 50
                    ]);
                correct: false
            -   value: |
                    $formBuilder->add('name', RangeType::class, [
                        'min' => 5,
                        'max' => 50
                    ]);
                correct: false

    -   question: |
            By default, which function provides the choices of the Symfony\Component\Form\Extension\Core\Type\LanguageType form type ?
        answers:
            - { value: Symfony\Component\Intl\Intl::getLanguageBundle()->getLanguageNames(), correct: true }
            - { value: Intl::getLanguages(), correct: false }
            - { value: Symfony\Component\Locale\getDisplayLanguages(), correct: false }
            - { value: Symfony\Component\Form\Extension\Core\Type\LanguageType::getChoices(), correct: false }

    -   question: "According to the official Symfony Best Practices Guide, in which namespace do you need to put the form type classes?"
        answers:
            - { value: AppBundle\FormType\Form, correct: false }
            - { value: AppBundle\Form, correct: true }
            - { value: AppBundle\Form\Type, correct: false }
            - { value: AppBundle\FormType, correct: false }

    -   question: "Which is the correct way to add an extension MyForm to the Form component?"
        answers:
            - value: |
                  use Symfony\Component\Form\Forms;

                  $formFactory = Forms::createFormFactoryBuilder()
                  ->addExtension(new MyFormExtension())
                  ->getFormFactory();
              correct: true
            - value: |
                  use Symfony\Component\Form\Forms;

                  $formFactory = Forms::createFormFactoryBuilder()
                  ->registerExtension(new MyFormExtension())
                  ->getFormFactory();
              correct: false
            - value: |
                  use Symfony\Component\Form\Forms;

                  $formFactory = Forms::createFormFactoryBuilder()
                  ->addExtension('text', new MyFormExtension())
                  ->getFormFactory();
              correct: false
            - value: |
                  use Symfony\Component\Form\Forms;

                  $formFactory = Forms::createFormFactoryBuilder()
                  ->add(new MyFormExtension())
                  ->getFormFactory();
              correct: false

    -   question: "What are prerequisites to create a FormExtension in a Symfony Fullstack project using FrameworkBundle?"
        answers:
            - value: |
                  Extending the Symfony\Component\Form\AbstractTypeExtension
              correct: true
            - value: |
                  Creating a service with the form.type_extension tag
              correct: true
            - value: |
                  Putting the new MyFormExtension class in the Form\Extension namespace
              correct: false
            - value: |
                  Implementing the interface Symfony\Component\Form\FormTypeExtensionInterface
              correct: true

    -   question: "Which interface should be implemented when you want to set the choice_loader option of the Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType form type ?"
        answers:
            - value: |
                  Symfony\Component\Form\Extension\Core\ChoiceLoaderInterface
              correct: false
            - value: |
                  Symfony\Component\Form\ChoiceLoaderInterface
              correct: false
            - value: |
                  Symfony\Component\Form\ChoiceList\Loader\ChoiceLoaderInterface
              correct: true

    -   question: "How do you prevent form_end from rendering the rest of the fields?"
        answers:
            -   value: |
                    {{ form_end(form, {'render_rest': false}) }}
                correct: true
            -   value: |
                    This is not possible
                correct: false
            -   value: |
                    {{ form_end(form, false) }}
                correct: false
            -   value: |
                    {{ form_end(form, 0, false) }}
                correct: false

    -   question: "What will a call to {{ form(form) }} result in?"
        answers:
            -   value: "The rendering of the FormView into a whole HTML form"
                correct: true
            -   value: "An error"
                correct: false
            -   value: "The rendering of the first field in the form"
                correct: false

    -   question: "Which of the following are valid form functions for rendering the FormView?"
        answers:
            -   value: "{{ form_start(form) }}"
                correct: true
            -   value: "{{ form_errors(form) }}"
                correct: true
            -   value: "{{ form_row(form.field) }}"
                correct: true
            -   value: "{{ form_end(form) }}"
                correct: true
            -   value: "{{ form_widget(form.field) }}"
                correct: true
            -   value: "{{ form_help(form.field) }}"
                correct: true
            -   value: "{{ form_errors(form.field) }}"
                correct: true
            -   value: "{{ form_validation(form.field) }}"
                correct: false
            -   value: "{{ form_begin(form) }}"
                correct: false
            -   value: "{{ form_close(form) }}"
                correct: false
            -   value: "{{ form_field(form.field) }}"
                correct: false

    -   question: |
            What will be the value of form.field.vars.attr.class after running:

            {{ form_widget(form, { 'attr': {'class': 'foo'} }) }}
        answers:
            -   value: "foo"
                correct: false
            -   value: "It will not contain a valid, or it will contain the value configured earlier"
                correct: true

    -   question: 'How would the id of the task field be accessed in Twig?'
        answers:
            -   value: "{{ form.task.vars.id }}"
                correct: true
            -   value: "{{ form.task.id }}"
                correct: false
            -   value: "{{ form.task.vars.fields.id }}"
                correct: false
            -   value: "{{ form.fields.task.vars.id }}"
                correct: false

    -   question: 'What is the recommended way to customise the rendering of all usages of a field in an application?'
        answers:
            -   value: "Using a form theme"
                correct: true
            -   value: "Using functions in Twig templates were the forms are used"
                correct: false

    -   question: 'How could you adjust the HTTP method of a form is rendered in a Twig template?'
        answers:
            -   value: "{{ form(form, {'method': 'GET'}) }}"
                correct: true
            -   value: "{{ form(form, {'http_method': 'GET'}) }}"
                correct: false
            -   value: "{{ form(form, 'GET') }}"
                correct: false
            -   value: "{{ form(form, false, 'GET') }}"
                correct: false

    -   question: 'Which Twig form function handles only rendering the first <form> tag?'
        answers:
            -   value: "{{ form_start(form) }}"
                correct: true
            -   value: "{{ form_tag(form) }}"
                correct: false
            -   value: "{{ form_first(form) }}"
                correct: false

    -   question: 'How could you adjust the HTTP method of a form is rendered in a Twig template?'
        answers:
            -   value: "{{ form_start(form, {'method': 'GET'}) }}"
                correct: true
            -   value: "{{ form_start(form, {'http_method': 'GET'}) }}"
                correct: false
            -   value: "{{ form_start(form, 'GET') }}"
                correct: false
            -   value: "{{ form_start(form, false, 'GET') }}"
                correct: false

    -   question: 'Which Twig form function handles only rendering the last </form> tag?'
        answers:
            -   value: "{{ form_end(form) }}"
                correct: true
            -   value: "{{ form_close(form) }}"
                correct: false
            -   value: "{{ form_tag_end(form) }}"
                correct: false

    -   question: 'Which Twig form function handles only rendering the label for a form field?'
        answers:
            -   value: "{{ form_label(form) }}"
                correct: true
            -   value: "{{ form_widget(form) }}"
                correct: false
            -   value: "{{ label_form(form) }}"
                correct: false

    -   question: 'Which of the following are valid ways to customise the label of a form field within a Twig template?'
        answers:
            -   value: "{{ form_label(form.name, 'Updated field') }}"
                correct: true
            -   value: "{{ form_label(form.name, null, 'Updated field') }}"
                correct: false
            -   value: "{{ label_form(form, 'Updated field') }}"
                correct: false
            -   value: "{{ label_form(form, null, 'Updated field') }}"
                correct: false
            -   value: "{{ form_label(form.name, null, {'label': 'Updated field'}) }}"
                correct: true
            -   value: "{{ form_label(form.name, {'label': 'Updated field'}) }}"
                correct: false
            -   value: "{{ label_form(form.name, {'label': 'Updated field'}) }}"
                correct: false

    -   question: 'How would you add the HTML class foo to the form.name field?'
        answers:
            -   value: "{{ form_label(form.name, null, {'label_attr': {'class': 'foo'}}) }}"
                correct: true
            -   value: "{{ form_label(form.name, null, {'class': 'foo'}) }}"
                correct: false
            -   value: "{{ form_label(form.name, {'class': 'foo'}) }}"
                correct: false
            -   value: "{{ form_label(form.name, {'label_attr': {'class': 'foo'}}) }}"
                correct: false

    -   question: 'Which Twig form function handles only rendering the help text for a form field?'
        answers:
            -   value: "{{ form_help(form.name) }}"
                correct: true
            -   value: "{{ help_form(form.name) }}"
                correct: false
            -   value: "{{ form_help_text(form.name) }}"
                correct: false
            -   value: "{{ form_help(form) }}"
                correct: false

    -   question: 'Which Twig form function handles only rendering the form errors for a form field?'
        answers:
            -   value: "{{ form_errors(form.name) }}"
                correct: true
            -   value: "{{ form_errors(form) }}"
                correct: false
            -   value: "{{ errors_form(form.name) }}"
                correct: false
            -   value: "{{ form_errors_text(form.name) }}"
                correct: false

    -   question: 'Which Twig form function handles rendering the HTML tag for the field?'
        answers:
            -   value: "{{ form_widget(form.name) }}"
                correct: false
            -   value: "{{ form_widget(form) }}"
                correct: true
            -   value: "{{ widget_form(form.name) }}"
                correct: false
            -   value: "{{ form_html_widget(form.name) }}"
                correct: false
            -   value: "{{ form_html_widget(form) }}"
                correct: false

    -   question: "Which Twig form function handles returning a forms view's parent?"
        answers:
            -   value: "{{ form_parent(form) }}"
                correct: false
            -   value: "{{ parent_form_form(form) }}"
                correct: true
            -   value: "{{ form_get_parent(form) }}"
                correct: false
            -   value: "{{ form_parent_or_null(form) }}"
                correct: false
            -   value: "{{ parent(form) }}"
                correct: false

    -   question: "If you need to change request data before binding them to the form, which event should you use?"
        answers:
            -   value: "FormEvents::POST_SET_DATA"
                correct: false
            -   value: "FormEvents::PRE_SET_DATA"
                correct: false
            -   value: "FormEvents::PRE_SUBMIT"
                correct: true
            -   value: "FormEvents::POST_SUBMIT"
                correct: false

    -   question: |
            Does a Symfony\Component\Form\Exception\TransformationFailedException thrown in a DataTransformer cause a validation error ?
        answers:
            -   value: "Yes"
                correct: true
            -   value: "No"
                correct: false
